// automatically generated by the FlatBuffers compiler, do not modify

package com.dimitrismantas.torch.core.graph;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Edge extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_1_21(); }
  public static Edge getRootAsEdge(ByteBuffer _bb) { return getRootAsEdge(_bb, new Edge()); }
  public static Edge getRootAsEdge(ByteBuffer _bb, Edge obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Edge __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int endVertexLabel() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public short length() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public short travelTime() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createEdge(FlatBufferBuilder builder,
      int endVertexLabel,
      short length,
      short travelTime) {
    builder.startTable(3);
    Edge.addEndVertexLabel(builder, endVertexLabel);
    Edge.addTravelTime(builder, travelTime);
    Edge.addLength(builder, length);
    return Edge.endEdge(builder);
  }

  public static void startEdge(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addEndVertexLabel(FlatBufferBuilder builder, int endVertexLabel) { builder.addInt(0, endVertexLabel, 0); }
  public static void addLength(FlatBufferBuilder builder, short length) { builder.addShort(1, length, 0); }
  public static void addTravelTime(FlatBufferBuilder builder, short travelTime) { builder.addShort(2, travelTime, 0); }
  public static int endEdge(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEdgeBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedEdgeBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Edge get(int j) { return get(new Edge(), j); }
    public Edge get(Edge obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

